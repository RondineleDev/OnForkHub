name: Enhanced PR Telegram Notification

on:
  fork:
  pull_request:
    types: [opened, closed, edited, reopened]
  issues:
    types: [opened, closed, reopened, edited]
  issue_comment:
    types: [created, edited, deleted]
  push:
    branches:
      - main
      - dev
      - 'release/**'
      - 'feature/**'
      - 'hotfix/**'
      - 'bugfix/**'
  watch:
    types: [started]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Get current UTC time
        id: current-time
        run: echo "time=$(date -u '+%d/%m/%Y %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Prepare Message
        id: prepare-message
        run: |
          if [[ "${{ github.event_name }}" == "fork" ]]; then
            echo "event_message=üî± *New Fork Created*
            ‚îú Repository: ${{ github.repository }}
            ‚îú Forked by: ${{ github.actor }}
            ‚îî Fork URL: ${{ github.event.forkee.html_url }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "event_message=üîÑ *Pull Request #${{ github.event.pull_request.number }}*
            ‚îú Branch Source: \`${{ github.event.pull_request.head.ref }}\`
            ‚îú Branch Target: \`${{ github.event.pull_request.base.ref }}\`
            ‚îú Title: ${{ github.event.pull_request.title }}
            ‚îú Author: [${{ github.event.pull_request.user.login }}](https://github.com/${{ github.event.pull_request.user.login }})
            ‚îú Status: ${{ github.event.action }}
            ‚îî URL: [View PR](${{ github.event.pull_request.html_url }})" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            echo "event_message=üìù *Push*
            ‚îú Branch: \`${{ github.ref_name }}\`
            ‚îú Author: [${{ github.event.pusher.name }}](https://github.com/${{ github.event.pusher.name }})
            ‚îú Commits: ${{ github.event.commits.length }}
            ‚îú Message: ${{ github.event.head_commit.message }}
            ‚îî URL: [View Changes](${{ github.event.repository.html_url }}/commit/${{ github.sha }})" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "issues" ]]; then
            echo "event_message=üìù *Issue #${{ github.event.issue.number }}*
            ‚îú Title: ${{ github.event.issue.title }}
            ‚îú Status: ${{ github.event.action }}
            ‚îú Author: [${{ github.event.issue.user.login }}](https://github.com/${{ github.event.issue.user.login }})
            ‚îî URL: [View Issue](${{ github.event.issue.html_url }})" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            echo "event_message=üí≠ *Comment on Issue #${{ github.event.issue.number }}*
            ‚îú Author: [${{ github.event.comment.user.login }}](https://github.com/${{ github.event.comment.user.login }})
            ‚îú Content: ${{ github.event.comment.body }}
            ‚îî URL: [View Comment](${{ github.event.comment.html_url }})" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "watch" ]]; then
            echo "event_message=‚≠ê *Repository Starred*
            ‚îî By: [${{ github.event.sender.login }}](${{ github.event.sender.html_url }})" >> $GITHUB_OUTPUT
          else
            echo "event_message=*Event:* ${{ github.event_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            üîî *GitHub Notification*
            *Repository:* [${{ github.repository }}](https://github.com/${{ github.repository }})
            *Event Type:* ${{ github.event_name }}
            
            ${{ steps.prepare-message.outputs.event_message }}
            
            ‚è∞ ${{ steps.current-time.outputs.time }}

name: GitHub Events Telegram Notifier

on:
  pull_request:
    types: [opened, closed, edited]
  issues:
    types: [opened, closed]
  push:
    branches:
      - main
      - dev
      - 'release/*'
      - 'feature/*'
      - 'hotfix/*'
      - 'bugfix/*'

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event
        env:
          EVENT_CONTEXT: ${{ toJson(github.event) }}
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Event context: $EVENT_CONTEXT"

      - name: Test Simple Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            üîî *Test Notification*
            Repository: ${{ github.repository }}
            Event: ${{ github.event_name }}
            Actor: ${{ github.actor }}

      - name: Send Full Notification
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            üîî *GitHub Event Notification*
            
            üìÇ *Repository:* ${{ github.repository }}
            üë§ *Actor:* ${{ github.actor }}
            üìù *Event Type:* ${{ github.event_name }}
            
            ${{ github.event_name == 'pull_request' && format('*Pull Request #{0}:* {1}', github.event.pull_request.number, github.event.pull_request.title) || '' }}
            ${{ github.event_name == 'issues' && format('*Issue #{0}:* {1}', github.event.issue.number, github.event.issue.title) || '' }}
            ${{ github.event_name == 'push' && format('*Push to {0}:* {1} commit(s)', github.ref_name, github.event.commits.length) || '' }}

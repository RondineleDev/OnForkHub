name: GitHub Events Telegram Notifier

on:
  pull_request:
    types: [opened, closed, edited, ready_for_review, review_requested, reopened, assigned, unassigned, labeled, unlabeled]
  pull_request_review:
    types: [submitted, edited, dismissed]
  pull_request_review_comment:
    types: [created, edited, deleted]
  issues:
    types: [opened, closed, reopened, assigned, unassigned, labeled, unlabeled, edited, deleted, transferred, pinned, unpinned, locked, unlocked]
  issue_comment:
    types: [created, edited, deleted]
  watch:
    types: [started]
  fork:
  star:
    types: [created, deleted]
  push:
    branches:
      - main
      - dev
      - 'release/*'
      - 'feature/*'
      - 'hotfix/*'
      - 'bugfix/*'
  discussion:
    types: [created, edited, deleted, transferred, pinned, unpinned, labeled, unlabeled, locked, unlocked]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          EVENT_CONTEXT: ${{ toJson(github.event) }}
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Repository: ${{ github.repository }}"
          echo "Checking Telegram credentials..."
          if [ -n "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then
            echo "Bot token is set"
          else
            echo "Bot token is missing!"
          fi
          if [ -n "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            echo "Chat ID is set"
          else
            echo "Chat ID is missing!"
          fi

      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          disable_notification: false
          message: |
            🔔 *New GitHub Activity*
            
            *Repository:* [${{ github.repository }}](https://github.com/${{ github.repository }})
            *Event:* `${{ github.event_name }}`
            
            ${{ if (github.event_name == 'pull_request') }}
            🔄 *Pull Request #${{ github.event.pull_request.number }}*
            └ *Title:* ${{ github.event.pull_request.title }}
            └ *Status:* ${{ github.event.action }}
            └ *Author:* [${{ github.event.pull_request.user.login }}](${{ github.event.pull_request.user.html_url }})
            └ [View Pull Request](${{ github.event.pull_request.html_url }})
            ${{ endif }}
            
            ${{ if (github.event_name == 'issues') }}
            📌 *Issue #${{ github.event.issue.number }}*
            └ *Title:* ${{ github.event.issue.title }}
            └ *Status:* ${{ github.event.action }}
            └ *Author:* [${{ github.event.issue.user.login }}](${{ github.event.issue.user.html_url }})
            └ [View Issue](${{ github.event.issue.html_url }})
            ${{ endif }}
            
            ${{ if (github.event_name == 'push') }}
            📦 *New Push*
            └ *Branch:* `${{ github.ref_name }}`
            └ *Author:* [${{ github.event.pusher.name }}](https://github.com/${{ github.event.pusher.name }})
            └ [View Changes](${{ github.event.repository.html_url }}/commit/${{ github.event.after }})
            ${{ endif }}
            
            ${{ if (github.event_name == 'star') }}
            ⭐ *Repository Starred*
            └ *By:* [${{ github.event.sender.login }}](${{ github.event.sender.html_url }})
            ${{ endif }}
            
            ${{ if (github.event_name == 'fork') }}
            🔱 *Repository Forked*
            └ *By:* [${{ github.event.forkee.owner.login }}](${{ github.event.forkee.owner.html_url }})
            └ [View Fork](${{ github.event.forkee.html_url }})
            ${{ endif }}
            
            ${{ if (github.event_name == 'issue_comment') }}
            💭 *New Comment on Issue #${{ github.event.issue.number }}*
            └ *Author:* [${{ github.event.comment.user.login }}](${{ github.event.comment.user.html_url }})
            └ [View Comment](${{ github.event.comment.html_url }})
            ${{ endif }}
            
            ⏰ _${{ github.event.repository.updated_at }}_

name: PR Telegram Notification

on:
  pull_request:
    types: [opened, closed, edited, ready_for_review, review_requested, reopened]
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Get current UTC time
        id: current-time
        run: echo "time=$(date -u '+%d/%m/%Y %H:%M:%S UTC')" >> $GITHUB_ENV

      - name: Prepare Telegram Notification Message
        id: prepare-message
        run: |
          # Dados do Pull Request
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_SOURCE_BRANCH="${{ github.event.pull_request.head.ref }}"
          PR_TARGET_BRANCH="${{ github.event.pull_request.base.ref }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_AUTHOR_URL="${{ github.event.pull_request.user.html_url }}"
          LAST_COMMIT_MESSAGE="${{ github.event.pull_request.head.commit.message }}"
          LAST_COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
          REPO_URL="${{ github.event.repository.html_url }}"
          PR_URL="${{ github.event.pull_request.html_url }}"

          # Construção da Mensagem
          MESSAGE="🔔 *GitHub Notification*\n\n"
          MESSAGE+="📝 *Pull Request*\n"
          MESSAGE+="├─ *Branch Source:* \`${PR_SOURCE_BRANCH}\`\n"
          MESSAGE+="├─ *Branch Target:* \`${PR_TARGET_BRANCH}\`\n"
          MESSAGE+="├─ *Author:* [${PR_AUTHOR}](${PR_AUTHOR_URL})\n"
          MESSAGE+="└─ *Last Commit:*\n\n"
          MESSAGE+="\`${LAST_COMMIT_MESSAGE}\`\n\n"
          MESSAGE+="└─ [View Commit](${REPO_URL}/commit/${LAST_COMMIT_SHA})\n"
          MESSAGE+="└─ [View Pull Request](${PR_URL})\n\n"
          MESSAGE+="⏰ _${{ env.time }}_"

          echo "message=$MESSAGE" >> $GITHUB_ENV

      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: ${{ env.message }}

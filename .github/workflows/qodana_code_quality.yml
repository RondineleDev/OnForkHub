name: Qodana Quality Check

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - dev
      - 'release/*' 
      - 'feature/*'
      - 'hotfix/*'
      - 'bugfix/*'

jobs:
  qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
      security-events: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install and Run CSharpier
        run: |
          dotnet new tool-manifest
          dotnet tool install csharpier
          dotnet tool restore
          dotnet dotnet-csharpier .
          if [[ -n "$(git status --porcelain)" ]]; then
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            
            PR_NUMBER=${{ github.event.pull_request.number }}
            FORMAT_BRANCH="bugfix/formatting-${PR_NUMBER}"
            
            git checkout -b $FORMAT_BRANCH
            git add .
            git commit -m "style: apply code formatting"
            git push origin $FORMAT_BRANCH
            
            gh pr create \
              --title "style: apply code formatting" \
              --body "Automated PR to fix code formatting using CSharpier" \
              --base ${{ github.event.pull_request.head.ref }} \
              --head $FORMAT_BRANCH \
              --label "formatting,automated-pr"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Qodana Analysis
        uses: JetBrains/qodana-action@v2024.2
        with:
          args: --apply-fixes
          push-fixes: branch
          pr-mode: false
          branch-name: bugfix/qodana-${{ github.event.pull_request.number }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          use-caches: true
          cache-default-branch-only: true
          upload-result: true
          artifact-name: qodana-results
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_1403575179 }}
          QODANA_ENDPOINT: 'https://qodana.cloud'

      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json
